name: Windows

on: [push, pull_request]

jobs:
  build-win10:
    strategy:
      matrix:
        toolset: [Win32, x64]
        config: [Debug, Release]

    runs-on: windows-latest
    name: Windows 10, ${{ matrix.config }} ${{ matrix.toolset }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: DiligentCore format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentCore\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentTools format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentTools\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentFX format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentFX\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentSamples format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentSamples\BuildTools\FormatValidation"
        validate_format_win.bat

    - name: Configure CMake
      if: success()
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/DiligentCore/BuildTools/Scripts/github_actions
        ./configure_cmake.sh "win10" "${{runner.workspace}}" ${{ matrix.config }} ${{ matrix.toolset }}

    - name: Build
      if: success()
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{ matrix.config }} -j2

    - name: DiligentCoreTest
      shell: bash
      run: |
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreTest\${{ matrix.config }}\DiligentCoreTest.exe"

    - name: DiligentCoreAPITest D3D11
      shell: bash
      run: |
        cd "$GITHUB_WORKSPACE\DiligentCore\Tests\DiligentCoreAPITest\assets"
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreAPITest\${{ matrix.config }}\DiligentCoreAPITest.exe" --mode=d3d11_sw

    - name: DiligentCoreAPITest D3D12
      if: success()
      shell: bash
      run: |
        cd "$GITHUB_WORKSPACE\DiligentCore\Tests\DiligentCoreAPITest\assets"
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreAPITest\${{ matrix.config }}\DiligentCoreAPITest.exe" --mode=d3d12_sw
    - name: DiligentCoreAPITest D3D12 DXC
      if: success()
      shell: bash
      run: |
        cd "$GITHUB_WORKSPACE\DiligentCore\Tests\DiligentCoreAPITest\assets"
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreAPITest\${{ matrix.config }}\DiligentCoreAPITest.exe" --mode=d3d12_sw --shader_compiler=dxc


  build-win10-dev:
    strategy:
      matrix:
        toolset: [x64]
        config: [Release]

    runs-on: windows-latest
    name: Windows 10, ${{ matrix.config }}-DEV ${{ matrix.toolset }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: DiligentCore format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentCore\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentTools format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentTools\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentFX format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentFX\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentSamples format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentSamples\BuildTools\FormatValidation"
        validate_format_win.bat

    - name: Configure CMake
      if: success()
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/DiligentCore/BuildTools/Scripts/github_actions
        ./configure_cmake.sh "win10-dev" "${{runner.workspace}}" ${{ matrix.config }} ${{ matrix.toolset }}

    - name: Build
      if: success()
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{ matrix.config }} -j2

    - name: DiligentCoreTest
      shell: bash
      run: |
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreTest\${{ matrix.config }}\DiligentCoreTest.exe"


  build-win8:
    strategy:
      matrix:
        toolset: [x64]
        config: [Release]

    runs-on: windows-latest
    name: Windows 8.1, ${{ matrix.config }} ${{ matrix.toolset }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: DiligentCore format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentCore\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentTools format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentTools\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentFX format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentFX\BuildTools\FormatValidation"
        validate_format_win.bat
        
    - name: DiligentSamples format validation
      shell: cmd
      run: |
        cd "%GITHUB_WORKSPACE%\DiligentSamples\BuildTools\FormatValidation"
        validate_format_win.bat

    - name: Configure CMake
      if: success()
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/DiligentCore/BuildTools/Scripts/github_actions
        ./configure_cmake.sh "win8" "${{runner.workspace}}" ${{ matrix.config }} ${{ matrix.toolset }}

    - name: Build
      if: success()
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{ matrix.config }} -j2

    - name: DiligentCoreTest
      shell: bash
      run: |
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreTest\${{ matrix.config }}\DiligentCoreTest.exe"

    - name: DiligentCoreAPITest D3D11
      shell: bash
      run: |
        cd "$GITHUB_WORKSPACE\DiligentCore\Tests\DiligentCoreAPITest\assets"
        "${{runner.workspace}}\build\DiligentCore\Tests\DiligentCoreAPITest\${{ matrix.config }}\DiligentCoreAPITest.exe" --mode=d3d11_sw

